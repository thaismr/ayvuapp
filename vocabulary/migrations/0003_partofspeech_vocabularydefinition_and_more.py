# Generated by Django 4.1.7 on 2023-03-27 23:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('languages', '0006_merge_0004_auto_20220503_1159_0005_auto_20220503_1249'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('vocabulary', '0002_alter_vocabulary_options_vocabulary_public_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='PartOfSpeech',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_of_speech', models.CharField(max_length=150, verbose_name='Part of speech')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='part_of_speech', to='languages.language', verbose_name='Language')),
            ],
        ),
        migrations.CreateModel(
            name='VocabularyDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('definition', models.TextField(verbose_name='Definition')),
                ('usage', models.TextField(verbose_name='Usage')),
                ('part_of_speech', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='definitions', to='vocabulary.partofspeech', verbose_name='Part of speech')),
            ],
        ),
        migrations.RemoveField(
            model_name='historicalvocabulary',
            name='definition',
        ),
        migrations.RemoveField(
            model_name='vocabulary',
            name='definition',
        ),
        migrations.CreateModel(
            name='VocabularyExample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('example', models.TextField(verbose_name='Example')),
                ('definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='examples', to='vocabulary.vocabularydefinition', verbose_name='Definition')),
            ],
        ),
        migrations.AddField(
            model_name='vocabularydefinition',
            name='vocabulary',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='definitions', to='vocabulary.vocabulary', verbose_name='Vocabulary'),
        ),
        migrations.CreateModel(
            name='HistoricalVocabularyDefinition',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('definition', models.TextField(verbose_name='Definition')),
                ('usage', models.TextField(verbose_name='Usage')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('part_of_speech', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='vocabulary.partofspeech', verbose_name='Part of speech')),
                ('vocabulary', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='vocabulary.vocabulary', verbose_name='Vocabulary')),
            ],
            options={
                'verbose_name': 'historical vocabulary definition',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
